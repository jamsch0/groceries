@using Groceries.Data
@using Microsoft.EntityFrameworkCore

@layout Layout

@inject IDbContextFactory<AppDbContext> DbContextFactory

<PageTitle>Groceries &ndash; New Transaction</PageTitle>

<h1>New Transaction</h1>

<div class="form-field">
    @Transaction.CreatedAt.ToShortDateString() @Transaction.CreatedAt.ToLongTimeString() &ndash; @store
</div>

<form method="post">
    <section class="card form-field">
        <header class="card__header row">
            <h2 class="row__fill">Promotions</h2>
            <a class="button button--primary" href="/transactions/new/promotions/new" autofocus data-turbo-frame="modal">
                New promotion
            </a>
        </header>

        <div class="card__content card__content--table">
            <Table Items="Transaction.Promotions.AsQueryable()" HeaderClass="table__header--compact" CellClass="table__cell--compact">
                <ChildContent>
                    <PropertyTableColumn Property="p => p.Name" Fill="true" />
                    <TemplateTableColumn Title="Items" Align="Align.End" Context="promotion">
                        @promotion.Items.Sum(item => Transaction.Items.Single(i => i.ItemId == item.Id).Quantity)
                    </TemplateTableColumn>
                    <PropertyTableColumn Property="p => p.Amount" Context="amount">
                        @((-amount).ToString("c"))
                    </PropertyTableColumn>
                    <TemplateTableColumn Context="promotion">
                        <a class="link" href="/transactions/new/promotions/edit/@promotion.Id" data-turbo-frame="modal">
                            Edit
                        </a>
                    </TemplateTableColumn>
                </ChildContent>
                <FooterContent>
                    <tr>
                        <td class="table__cell table__cell--compact table__cell--total" colspan="2">Total</td>
                        <td class="table__cell table__cell--compact table__cell--total table__cell--align-end">
                            @Transaction.Total.ToString("c")
                        </td>
                        <td class="table__cell table__cell--compact"></td>
                    </tr>
                </FooterContent>
            </Table>
        </div>
    </section>

    <div class="row">
        <button class="button button--primary" type="submit" disabled="@(Transaction.Items.Count == 0)">Save</button>
        <a class="button" href="/transactions/new/items">Back</a>
    </div>
</form>

@code {
    private string store = string.Empty;

    [Parameter]
    public required Transaction Transaction { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        using var dbContext = DbContextFactory.CreateDbContext();
        store = await dbContext.Stores
            .Where(store => store.Id == Transaction.StoreId)
            .Select(store => string.Concat(store.Retailer!.Name, " ", store.Name))
            .SingleAsync();
    }
}
