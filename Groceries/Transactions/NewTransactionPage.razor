@using Groceries.Data
@using Microsoft.EntityFrameworkCore

@layout Layout

@inject IDbContextFactory<AppDbContext> DbContextFactory

<PageTitle>Groceries &ndash; New Transaction</PageTitle>

<h1>New Transaction</h1>

<form method="post">
    <div class="form-field">
        <label class="form-field__label" for="transactionCreatedAt">Date</label>
        <div class="form-field__control input">
            <input class="input__control" id="transactionCreatedAt" name="createdAt" type="datetime-local" value="@datetime" max="@datetime" step="1" required autofocus />
        </div>
    </div>

    <div class="form-field">
        <label class="form-field__label" for="transactionStoreId">Store</label>
        <select class="form-field__control select" id="transactionStoreId" name="storeId" required>
            @foreach (var store in stores)
            {
                <option value="@store.Id">@store.Name</option>
            }
        </select>
    </div>

    <div class="row">
        <button class="button button--primary" type="submit">Next</button>
        <a class="button" href="/transactions?page=1">Cancel</a>
    </div>
</form>

@code {
    private record StoreModel(Guid Id, string Name);

    private string datetime = DateTime.Now.ToString("s");
    private StoreModel[] stores = [];

    protected override async Task OnInitializedAsync()
    {
        using var dbContext = DbContextFactory.CreateDbContext();
        stores = await dbContext.Stores
            .OrderBy(store => store.Retailer!.Name)
            .ThenBy(store => store.Name)
            .Select(store => new StoreModel(store.Id, string.Concat(store.Retailer!.Name, " ", store.Name)))
            .ToArrayAsync();
    }
}
