@using Groceries.Data;
@using Microsoft.EntityFrameworkCore;

@model Transaction
@inject AppDbContext dbContext
@{
    ViewBag.Title = "New Transaction";

    var store = await dbContext.Stores
        .Where(store => store.Id == Model.StoreId)
        .Select(store => string.Concat(store.Retailer!.Name, " ", store.Name))
        .SingleAsync();

    var itemIds = Model.Items.Select(item => item.ItemId);
    var items = await dbContext.Items
        .Where(item => itemIds.Contains(item.Id))
        .Select(item => new { item.Id, Name = string.Concat(item.Brand, " ", item.Name) })
        .ToListAsync();
}

<h1>New Transaction</h1>

<div class="form-field">@Model.CreatedAt.ToShortDateString() @Model.CreatedAt.ToLongTimeString() &ndash; @store</div>

<form method="post" asp-action="NewTransactionItems">
    <div class="card form-field">
        <div class="card__header row">
            <h2 class="row__fill">Items</h2>
            <a class="button button--primary" asp-action="NewTransactionItem" autofocus data-turbo-frame="modal">New item</a>
        </div>

        <div class="card__content card__content--table">
            <table>
                <thead>
                    <tr>
                        <th scope="col" class="table__header" style="width: 100%">Name</th>
                        <th scope="col" class="table__header">Price</th>
                        <th scope="col" class="table__header"><abbr title="Quantity">Qty</abbr></th>
                        <th scope="col" class="table__header">Amount</th>
                        <th scope="col" class="table__header"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td class="table__cell table__cell--compact">
                                @items.Single(i => i.Id == item.ItemId).Name
                            </td>
                            <td class="table__cell table__cell--compact table__cell--numeric">
                                @item.Price.ToString("c")
                            </td>
                            <td class="table__cell table__cell--compact table__cell--numeric">
                                @item.Quantity
                            </td>
                            <td class="table__cell table__cell--compact table__cell--numeric">
                                @((item.Price * item.Quantity).ToString("c"))
                            </td>
                            <td class="table__cell table__cell--compact">
                                <a class="link" asp-action="EditTransactionItem" asp-route-id="@item.ItemId" data-turbo-frame="modal">Edit</a>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td class="table__cell table__cell--compact table__cell--total" colspan="3">Total</td>
                        <td class="table__cell table__cell--compact table__cell--numeric table__cell--total">
                            @Model.Items.Sum(item => item.Price * item.Quantity).ToString("c")
                        </td>
                        <td class="table__cell table__cell--compact"></td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>

    <div class="row">
        <button class="button button--primary" type="submit" @(Model.Items.Count == 0 ? "disabled" : "")>Save</button>
        <a class="button" asp-action="Index">Cancel</a>
    </div>
</form>
